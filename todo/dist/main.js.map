{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./src/TodoItem.vue?a8dd","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/App.vue?0547","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/TodoItem.vue?0ce7","webpack:///./src/TodoItem.vue?266c","webpack:///./src/App.vue?ecfd","webpack:///./src/App.vue?c8b6","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./src/App.vue","webpack:///./src/TodoItem.vue","webpack:///./src/TodoItem.vue?e403","webpack:///./src/App.vue?a655","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","makeMap","str","expectsLowerCase","map","list","split","length","val","toLowerCase","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","isArray","res","item","normalized","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","isHTMLTag","isSVGTag","looseEqual","a","b","aValidType","isDate","bValidType","getTime","equal","looseCompareArrays","keys","aHasKey","bHasKey","String","looseIndexOf","arr","findIndex","toDisplayString","JSON","stringify","replacer","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","hasOwn","Array","toTypeString","Date","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","configurable","toNumber","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","window","global","content","locals","add","default","useSourceMap","this","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","id","_i","push","listToStyles","parentId","styles","newStyles","part","css","media","parts","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","isOldIE","navigator","userAgent","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","type","appendChild","update","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","firstChild","g","Function","e","___CSS_LOADER_API_IMPORT___","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","_isEffect","isEffect","raw","effect","active","scheduler","undefined","includes","trackStack","shouldTrack","pop","resetTracking","uid","allowRecurse","deps","createReactiveEffect","lazy","stop","onStop","delete","pauseTracking","last","track","target","depsMap","set","Map","dep","Set","has","trigger","newValue","oldTarget","effects","effectsToAdd","builtInSymbols","getOwnPropertyNames","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","method","args","toRaw","apply","createSetter","shallowSet","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","createReactiveObject","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","targetTypeMap","proxy","Proxy","isReactive","isProxy","__v_isRef","unref","ref","shallowUnwrapHandlers","ComputedRefImpl","_setter","_dirty","_value","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","throwInDev","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","console","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","queueJob","job","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","getId","Infinity","devtools","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","hook","component","emit","app","event","rawArgs","props","modelArg","modifiersKey","number","__VUE_PROD_DEVTOOLS__","params","devtoolsComponentEmit","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","deopt","__emits","emits","hasExtends","__VUE_OPTIONS_API__","extendEmits","mixins","extends","isEmitListener","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","some","filterModelListeners","cloneVNode","dirs","transition","createVNode","Comment","filterSingleRoot","children","filtered","child","isVNode","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","updateHOCHostEl","subTree","normalizeSuspenseSlot","queueEffectWithSuspense","suspense","pendingBranch","isRenderingCompiledSlot","setCompiledSlotRendering","withCtx","renderFnWithContext","openBlock","owner","closeBlock","_c","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","arguments","initProps","rawProps","isStateful","isSSR","InternalObjectKey","setFullProps","needCastKeys","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","len","injectHook","currentInstance","prepend","hooks","wrappedHook","__weh","isUnmounted","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","INITIAL_WATCHER_VALUE","watch","doWatch","immediate","deep","flush","onTrack","onTrigger","cleanup","forceTrigger","_shallow","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","queuePreFlushCb","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransition","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","clone","isKeepAlive","ssContent","ssFallback","keepComment","keyedFragmentCount","Fragment","patchFlag","__isKeepAlive","RegExp","getName","displayName","matches","pattern","registerKeepAliveHook","__wdc","current","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","withDirectives","directives","bindings","dir","modifiers","mounted","updated","invokeDirectiveHook","prevVNode","oldBindings","binding","createAppContext","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","components","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","use","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","Text","Static","devtoolsInitApp","devtoolsUnmountApp","provide","prodEffectOptions","setRef","rawRef","oldRawRef","parentComponent","parentSuspense","oldRef","doSet","baseCreateRenderer","createHydrationFns","needWarn","initFeatureFlags","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","isSVG","optimized","getNextHostNode","unmount","dynamicChildren","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","vnodeHook","scopeId","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","beforeEnter","onVnodeMounted","enter","treeOwnerId","__scopeId","start","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","propsToUpdate","dynamicProps","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","emptyAppContext","uid$1","accessCache","setupContext","suspenseId","pendingId","asyncDep","asyncResolved","bc","bm","bu","u","um","bum","da","rtg","rtc","createComponentInstance","renderer","initSlots","setupResult","PublicInstanceProxyHandlers","setup","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","setupRenderEffect","placeholder","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","originNext","nextTree","prevTree","hydrateNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","move","moveType","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","onVnodeUnmounted","removeFragment","performRemove","end","_vnode","mt","mc","pc","pbc","createApp","ch1","ch2","disabled","NULL_DYNAMIC_COMPONENT","resolveAsset","warnMissing","selfName","registry","blockStack","currentBlock","disableTracking","createBlock","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","__vccOpts","klass","__isSuspense","isSuspense","__isTeleport","isTeleport","targetAnchor","staticCount","fallback","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","toMerge","existing","incoming","mergeProps","createTextVNode","text","flag","slot","slotFlag","parentProvides","inject","treatDefaultAsFactory","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","from","methodHandler","dataFn","resolveData","createWatcher","onDeactivated","onErrorCaptured","callHookFromMixins","base","callHookFromExtends","baseHook","selfHook","chainedMixins","path","segments","createPathGetter","mergeOptions","to","strats","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","resolveMergedOptions","$forceUpdate","$nextTick","$watch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","compile","objectWithRefs","devtoolsRawSetupState","template","delimiters","_rc","getterOrOptions","setter","renderList","renderItem","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","tag","createElementNS","node","nodeValue","textContent","selector","temp","innerHTML","first","importantRE","setStyle","setProperty","prefixed","rawName","cached","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","now","createEvent","timeStamp","cachedNow","addEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","initialValue","invoker","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","Transition","propsOrChildren","h","resolveTransitionProps","DOMTransitionPropsValidators","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","setTimeout","whenTransitionEnds","cls","classList","_vtc","requestAnimationFrame","expectedType","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","max","hasTransform","delays","toMs","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","vModelText","_assign","castToNumber","domValue","activeElement","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","left","button","middle","right","exact","withModifiers","guard","rendererOptions","transitionClasses","className","patchClass","removeAttribute","patchStyle","tagName","shouldSetAsProp","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","ensureRenderer","normalizeContainer","todo","required","nextTodoId","createTodo","TodoItem","todos","newTodoText","trimmedText","addTodo","removeTodo","mount","containerOrSelector"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/stylus-loader/index.js!../node_modules/vue-loader/dist/index.js??ref--10-0!./TodoItem.vue?vue&type=style&index=0&id=2af8cbb8&lang=stylus&scoped=true\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1ec4645b\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/stylus-loader/index.js!../node_modules/vue-loader/dist/index.js??ref--10-0!./TodoItem.vue?vue&type=style&index=0&id=2af8cbb8&lang=stylus&scoped=true\", function() {\n     var newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/stylus-loader/index.js!../node_modules/vue-loader/dist/index.js??ref--10-0!./TodoItem.vue?vue&type=style&index=0&id=2af8cbb8&lang=stylus&scoped=true\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/stylus-loader/index.js!../node_modules/vue-loader/dist/index.js??ref--10-0!./App.vue?vue&type=style&index=0&lang=stylus\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3a396354\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/stylus-loader/index.js!../node_modules/vue-loader/dist/index.js??ref--10-0!./App.vue?vue&type=style&index=0&lang=stylus\", function() {\n     var newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/stylus-loader/index.js!../node_modules/vue-loader/dist/index.js??ref--10-0!./App.vue?vue&type=style&index=0&lang=stylus\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export * from \"-!../node_modules/vue-style-loader/index.js!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/stylus-loader/index.js!../node_modules/vue-loader/dist/index.js??ref--10-0!./TodoItem.vue?vue&type=style&index=0&id=2af8cbb8&lang=stylus&scoped=true\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"li[data-v-2af8cbb8] {\\n  display: flex;\\n  margin: 5px 0;\\n}\\nli span[data-v-2af8cbb8] {\\n  flex: 1;\\n}\\nli button[data-v-2af8cbb8] {\\n  border: 1px solid #ffa500;\\n  background: #ffa500;\\n  color: #fff;\\n  font-size: 0.8rem;\\n  padding: 2px 4px;\\n  cursor: pointer;\\n}\\nli button[data-v-2af8cbb8]:hover {\\n  border-color: #ff8100;\\n  background: #ff8100;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export * from \"-!../node_modules/vue-style-loader/index.js!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/stylus-loader/index.js!../node_modules/vue-loader/dist/index.js??ref--10-0!./App.vue?vue&type=style&index=0&lang=stylus\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"*,\\n*::before,\\n*::after {\\n  box-sizing: border-box;\\n}\\nhtml,\\nbody {\\n  font: 16px/1.2 BlinkMacSystemFont, -apple-system, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif;\\n  padding: 10px;\\n}\\n.wrapper {\\n  width: 75%;\\n  margin: 0 auto;\\n}\\nform {\\n  margin-bottom: 20px;\\n}\\ninput[type=\\\"text\\\"] {\\n  width: 100%;\\n  padding: 10px;\\n  border: 1px solid #777;\\n}\\nul,\\nli {\\n  margin: 0;\\n  padding: 0;\\n}\\np.none {\\n  color: #888;\\n  font-size: small;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, isProxy, reactive, shallowReadonly, track, proxyRefs, computed as computed$1, ref, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    // Jobs can never be null before flush starts, since they are only invalidated\r\n    // during execution of another flushed job.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production') && (true )) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id);\r\n        record = map.get(id);\r\n    }\r\n    record.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).delete(instance);\r\n}\r\nfunction createRecord(id) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, new Set());\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        const comp = instance.type;\r\n        if (!hmrDirtyComponents.has(comp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n            extend(comp, newComp);\r\n            for (const key in comp) {\r\n                if (!(key in newComp)) {\r\n                    delete comp[key];\r\n                }\r\n            }\r\n            // 2. Mark component dirty. This forces the renderer to replace the component\r\n            // on patch.\r\n            hmrDirtyComponents.add(comp);\r\n            // 3. Make sure to unmark the component after the reload.\r\n            queuePostFlushCb(() => {\r\n                hmrDirtyComponents.delete(comp);\r\n            });\r\n        }\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.replace(/Once$/, '');\r\n    return (hasOwn(options, key[2].toLowerCase() + key.slice(3)) ||\r\n        hasOwn(options, key.slice(2)));\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\n/**\r\n * dev only\r\n */\r\nfunction filterSingleRoot(children) {\r\n    const filtered = children.filter(child => {\r\n        return !(isVNode(child) &&\r\n            child.type === Comment &&\r\n            child.children !== 'v-if');\r\n    });\r\n    return filtered.length === 1 && isVNode(filtered[0]) ? filtered[0] : null;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    const rendered = (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback ? fallback() : [], slots._ === 1 /* STABLE */\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : -2 /* BAIL */));\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-top\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post' });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentComponent, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentComponent, parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, parentComponent, 12 /* FUNCTION_REF */, [\r\n            value,\r\n            refs\r\n        ]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentComponent, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const moveStaticNode = (vnode, container, anchor) => {\r\n        let cur = vnode.el;\r\n        const end = vnode.anchor;\r\n        while (cur && cur !== end) {\r\n            const next = hostNextSibling(cur);\r\n            hostInsert(cur, container, anchor);\r\n            cur = next;\r\n        }\r\n        hostInsert(end, container, anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const removeStaticNode = (vnode) => {\r\n        let cur = vnode.el;\r\n        while (cur && cur !== vnode.anchor) {\r\n            const next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(vnode.anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                (true ) &&\r\n                parentComponent &&\r\n                parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // static node move can only happen when force updating HMR\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = Component.displayName || Component.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isArray(ref)\r\n            ? ref\r\n            : { i: currentRenderingInstance, r: ref }\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            for (const key in provides) {\r\n                provide(key, provides[key]);\r\n            }\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    if (!(process.env.NODE_ENV !== 'production') || !true) {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.2\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, unref, Fragment, h, BaseTransition, useTransitionState, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else if (value == null && typeof el[key] === 'string') {\r\n        // e.g. <div :id=\"null\">\r\n        el[key] = '';\r\n        el.removeAttribute(key);\r\n    }\r\n    else {\r\n        // some properties perform value validation and throw\r\n        try {\r\n            el[key] = value;\r\n        }\r\n        catch (e) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                    `value ${value} is invalid.`, e);\r\n            }\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\nfunction useCssVars(getter, scoped = false) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const prefix = scoped && instance.type.__scopeId\r\n        ? `${instance.type.__scopeId.replace(/^data-v-/, '')}-`\r\n        : ``;\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy), prefix);\r\n    onMounted(() => watchEffect(setVars));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars, prefix) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars, prefix);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${prefix}${key}`, unref(vars[key]));\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars, prefix));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                if (checked) {\r\n                    modelValue.add(elementValue);\r\n                }\r\n                else {\r\n                    modelValue.delete(elementValue);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { modifiers: { number } }, vnode) {\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        container.setAttribute('data-v-app', '');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","<template>\r\n  <div class=\"wrapper\">\r\n    <h1>My Todo List</h1>\r\n    <form @submit.prevent=\"addTodo\">\r\n      <input type=\"text\" name=\"todo-text\" v-model=\"newTodoText\" placeholder=\"New todo\">\r\n    </form>\r\n    <ul v-if=\"todos.length\">\r\n      <TodoItem v-for=\"todo in todos\" :key=\"todo.id\" :todo=\"todo\" @remove=\"removeTodo\"/>\r\n    </ul>\r\n    <p class=\"none\" v-else>Nothing left in the list. Add a new todo in the input above.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TodoItem from \"./TodoItem.vue\"\r\n\r\nlet nextTodoId = 1\r\n\r\nconst createTodo = text => ({\r\n  text,\r\n  id: nextTodoId++\r\n})\r\n\r\nexport default {\r\n  components: {\r\n    TodoItem\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      todos: [\r\n        createTodo(\"Learn Vue\"),\r\n        createTodo(\"Learn about single-file components\"),\r\n        createTodo(\"Fall in love ❤️\")\r\n      ],\r\n\r\n      newTodoText: \"\"\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    addTodo() {\r\n      const trimmedText = this.newTodoText.trim()\r\n\r\n      if (trimmedText) {\r\n        this.todos.push(createTodo(trimmedText))\r\n      }\r\n\r\n      this.newTodoText = \"\"\r\n    },\r\n\r\n    removeTodo(item) {\r\n      this.todos = this.todos.filter(todo => todo !== item)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n*, *::before, *::after\r\n  box-sizing border-box\r\n\r\nhtml, body\r\n  font 16px/1.2 BlinkMacSystemFont, -apple-system, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif\r\n  padding 10px\r\n\r\n.wrapper\r\n  width 75%\r\n  margin 0 auto\r\n\r\nform\r\n  margin-bottom 20px\r\n\r\ninput[type=\"text\"]\r\n  width 100%\r\n  padding 10px\r\n  border 1px solid #777\r\n\r\nul, li\r\n  margin 0\r\n  padding 0\r\n\r\np.none\r\n  color #888\r\n  font-size small\r\n</style>\r\n","<template>\r\n  <li>\r\n    <span>{{ todo.text }}</span>\r\n    <button @click.prevent=\"$emit('remove', todo)\">Remove</button>\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    todo: {\r\n      required: true,\r\n      type: Object\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style lang=\"stylus\" scoped>\r\nli\r\n  display flex\r\n  margin 5px 0\r\n\r\n  span\r\n    flex 1\r\n\r\n  button\r\n    border 1px solid orange\r\n    background orange\r\n    color white\r\n    font-size 0.8rem\r\n    padding 2px 4px\r\n    cursor pointer\r\n\r\n    &:hover\r\n      border-color #ff8100\r\n      background #ff8100\r\n</style>\r\n","import { render } from \"./TodoItem.vue?vue&type=template&id=2af8cbb8&scoped=true&bindings={\\\"todo\\\":\\\"props\\\"}\"\nimport script from \"./TodoItem.vue?vue&type=script&lang=js\"\nexport * from \"./TodoItem.vue?vue&type=script&lang=js\"\n\nimport \"./TodoItem.vue?vue&type=style&index=0&id=2af8cbb8&lang=stylus&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-2af8cbb8\"\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=097c3ffc&bindings={\\\"todos\\\":\\\"data\\\",\\\"newTodoText\\\":\\\"data\\\",\\\"addTodo\\\":\\\"options\\\",\\\"removeTodo\\\":\\\"options\\\"}\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&lang=stylus\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\n\r\ncreateApp(App).mount('#app')\r\n"],"sourceRoot":""}